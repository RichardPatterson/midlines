% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/midlines_functions.R
\name{midlines_draw}
\alias{midlines_draw}
\title{Estimates the midline(s) of sf polygon(s)}
\usage{
midlines_draw(x, border_line = NULL, dfMaxLength = NULL)
}
\arguments{
\item{x}{an sf polygon (or feature collection of polygons) within which to estimate the midline(s).}

\item{border_line}{an sf linestring forming the exterior border of the area of interest.}

\item{dfMaxLength}{maximum distance between points in polygon x used to generate Voronoi polygons. Argument passed to \code{\link[sf:geos_unary]{sf::st_segmentize()}}.}
}
\description{
Uses Voronoi tessellation to estimate the midlines of one or more sf polygons
}
\details{
Taking an sf polygon or feature collection of polygons, the function uses Voronoi tessellation to estimate the polygon midlines. Sufficient density of points are required on the polygon boarder to facilitate the Voronoi tessellation. Large gaps between points where perimeters have straight lines, therefore the dfMaxLength option is used to stipulate the maximum distance between points and add points where required. This argument is passed to \code{\link[sf:geos_unary]{sf::st_segmentize()}}.

The Voronoi tessellation is likely to lead to extraneous lines which do not form part of the intended midline(s). Additional functions \code{\link{midlines_clean}} and \code{\link{midlines_check}} will hopefully help to deal with these.

Where there is a region of interest defined by an sf linestring, e.g. of a bounding box, this can be specified to ensure the midlines do not extend beyond this.
}
\examples{
library(sf)
poly = st_buffer(st_linestring(matrix(c(0,0,10,0,10,10,0,10,0,0),ncol=2, byrow=TRUE) ),0.75)
plot(poly, col = "GRAY")

ml = midlines_draw(poly, dfMaxLength = 1)
plot(ml$geometry, add = TRUE)

}
